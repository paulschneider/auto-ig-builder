declare function FSHLexer(input: any): any;
declare class FSHLexer {
    constructor(input: any);
    _interp: any;
    get atn(): any;
    channelNames: string[];
    modeNames: string[];
    literalNames: string[];
    symbolicNames: string[];
    ruleNames: string[];
    grammarFileName: string;
}
declare namespace FSHLexer {
    export const EOF: number;
    export const KW_ALIAS: number;
    export const KW_PROFILE: number;
    export const KW_EXTENSION: number;
    export const KW_INSTANCE: number;
    export const KW_INSTANCEOF: number;
    export const KW_INVARIANT: number;
    export const KW_VALUESET: number;
    export const KW_CODESYSTEM: number;
    export const KW_RULESET: number;
    export const KW_MAPPING: number;
    export const KW_MIXINS: number;
    export const KW_PARENT: number;
    export const KW_ID: number;
    export const KW_TITLE: number;
    export const KW_DESCRIPTION: number;
    export const KW_EXPRESSION: number;
    export const KW_XPATH: number;
    export const KW_SEVERITY: number;
    export const KW_USAGE: number;
    export const KW_SOURCE: number;
    export const KW_TARGET: number;
    export const KW_MOD: number;
    export const KW_MS: number;
    export const KW_SU: number;
    export const KW_TU: number;
    export const KW_NORMATIVE: number;
    export const KW_DRAFT: number;
    export const KW_FROM: number;
    export const KW_EXAMPLE: number;
    export const KW_PREFERRED: number;
    export const KW_EXTENSIBLE: number;
    export const KW_REQUIRED: number;
    export const KW_CONTAINS: number;
    export const KW_NAMED: number;
    export const KW_AND: number;
    export const KW_ONLY: number;
    export const KW_OR: number;
    export const KW_OBEYS: number;
    export const KW_TRUE: number;
    export const KW_FALSE: number;
    export const KW_INCLUDE: number;
    export const KW_EXCLUDE: number;
    export const KW_CODES: number;
    export const KW_WHERE: number;
    export const KW_VSREFERENCE: number;
    export const KW_SYSTEM: number;
    export const KW_UNITS: number;
    export const KW_EXACTLY: number;
    export const KW_INSERT: number;
    export const EQUAL: number;
    export const STAR: number;
    export const COLON: number;
    export const COMMA: number;
    export const ARROW: number;
    export const STRING: number;
    export const MULTILINE_STRING: number;
    export const NUMBER: number;
    export const UNIT: number;
    export const CODE: number;
    export const CONCEPT_STRING: number;
    export const DATETIME: number;
    export const TIME: number;
    export const CARD: number;
    export const OR_REFERENCE: number;
    export const PIPE_REFERENCE: number;
    export const CANONICAL: number;
    export const CARET_SEQUENCE: number;
    export const REGEX: number;
    export const COMMA_DELIMITED_CODES: number;
    export const PARAMETER_DEF_LIST: number;
    export const COMMA_DELIMITED_SEQUENCES: number;
    export const BLOCK_COMMENT: number;
    export const SEQUENCE: number;
    export const WHITESPACE: number;
    export const LINE_COMMENT: number;
    export const PARAM_RULESET_REFERENCE: number;
    export const RULESET_REFERENCE: number;
    export const RULESET_OR_INSERT: number;
}
export { FSHLexer }