import { ContactDetail, UsageContext, ImplementationGuideDefinitionTemplate, Meta, Narrative, Extension, ImplementationGuideDependsOn, ImplementationGuideGlobal, ImplementationGuideDefinitionResource, ImplementationGuideDefinitionPage, ImplementationGuideDefinitionParameter, ImplementationGuideStatus, CodeableConcept } from '../fhirtypes';
/**
 * Configuration is related to the proposed YAML configuration format for FSH, but eliminates
 * ambiguities (like singular vs list representations) and normalizes closer to the intended
 * export formats.
 *
 * @see YAMLConfiguration
 * @see {@link http://hl7.org/fhir/R4/implementationguide.html}
 * @see {@link https://build.fhir.org/ig/FHIR/ig-guidance/using-templates.html#igroot}
 * @see {@link https://confluence.hl7.org/display/FHIR/NPM+Package+Specification}
 * @see {@link https://confluence.hl7.org/pages/viewpage.action?pageId=66928420#FHIRIGPackageListdoco-PublicationObject}
 * @see {@link https://github.com/FHIR/sample-ig/blob/master/input/includes/menu.xml}
 */
export declare type Configuration = {
    filePath?: string;
    canonical: string;
    id?: string;
    meta?: Meta;
    implicitRules?: string;
    language?: string;
    text?: Narrative;
    contained?: any[];
    extension?: Extension[];
    modifierExtension?: Extension[];
    url?: string;
    version?: string;
    name?: string;
    title?: string;
    status?: ImplementationGuideStatus;
    experimental?: boolean;
    date?: string;
    publisher?: string;
    contact?: ContactDetail[];
    description?: string;
    useContext?: UsageContext[];
    jurisdiction?: CodeableConcept[];
    copyright?: string;
    packageId?: string;
    license?: string;
    fhirVersion: string[];
    dependencies?: ImplementationGuideDependsOn[];
    global?: ImplementationGuideGlobal[];
    groups?: ConfigurationGroup[];
    resources?: ConfigurationResource[];
    pages?: ImplementationGuideDefinitionPage[];
    parameters?: ImplementationGuideDefinitionParameter[];
    templates?: ImplementationGuideDefinitionTemplate[];
    template?: string;
    menu?: ConfigurationMenuItem[];
    history?: ConfigurationHistory;
    indexPageContent?: string;
    FSHOnly?: boolean;
    applyExtensionMetadataToRoot?: boolean;
};
export declare type ConfigurationGroup = {
    id: string;
    name: string;
    description?: string;
    resources: string[];
};
export declare type ConfigurationResource = ImplementationGuideDefinitionResource & {
    omit?: boolean;
};
export declare type ConfigurationMenuItem = {
    name: string;
    url?: string;
    openInNewTab?: boolean;
    subMenu?: ConfigurationMenuItem[];
};
export declare type ConfigurationHistory = {
    'package-id'?: string;
    canonical?: string;
    title?: string;
    introduction?: string;
    list?: ConfigurationHistoryItem[];
};
export declare type ConfigurationHistoryItem = {
    version: string;
    date?: string;
    desc?: string;
    path: string;
    changes?: string;
    status?: 'ci-build' | 'preview' | 'ballot' | 'trial-use' | 'update' | 'normative' | 'trial-use+normative';
    sequence?: string;
    fhirversion?: string;
    current?: boolean;
};
