import { InstanceDefinition } from '../fhirtypes';
/**
 * Remove and return any "Inline" instances
 * @param {InstanceDefinition[]} instances - the list of InstanceDefinitions to filter. Will be mutated.
 * @returns {InstanceDefinition[]} - InstanceDefinitions that have Usage set to inline
 */
export declare function filterInlineInstances(instances: InstanceDefinition[]): InstanceDefinition[];
/**
 *
 * @param {InstanceDefinition[]} instances - the list of InstanceDefinitions to filter. Will be mutated.
 * @returns {InstanceDefinition[]} - InstanceDefinitions that have Usage set to example
 */
export declare function filterExampleInstances(instances: InstanceDefinition[]): InstanceDefinition[];
/**
 * The capabilities folder will include any resource type in the 'Conformance' category of FHIR resources,
 * not including StructureDefinition or OperationDefinition, as those resources should be in other folders
 * @see {@link https://www.hl7.org/fhir/resourcelist.html}
 *
 * @param {InstanceDefinition[]} instances - the list of InstanceDefinitions to filter. Will be mutated.
 * @returns {InstanceDefinition[]} - InstanceDefinitions that should be in the 'capabilities' folder for IG Publisher input
 */
export declare function filterCapabilitiesInstances(instances: InstanceDefinition[]): InstanceDefinition[];
/**
 * The vocabulary folder will include any resource type in the 'Terminology' category of FHIR resources
 * @see {@link https://www.hl7.org/fhir/resourcelist.html}
 *
 * @param {InstanceDefinition[]} instances - the list of InstanceDefinitions to filter. Will be mutated.
 * @returns {InstanceDefinition[]} - InstanceDefinitions that should be in the 'vocabulary' folder for IG Publisher input
 */
export declare function filterVocabularyInstances(instances: InstanceDefinition[]): InstanceDefinition[];
/**
 * The operation folder will include the OperationDefinition resource
 *
 * @param {InstanceDefinition[]} instances - the list of InstanceDefinitions to filter. Will be mutated.
 * @returns {InstanceDefinition[]} - InstanceDefinitions that should be in the 'operations' folder for IG Publisher input
 */
export declare function filterOperationInstances(instances: InstanceDefinition[]): InstanceDefinition[];
/**
 * The model folder will include the logical model resources (StructureDefinitions that have kind` set to 'logical')
 *
 * @param {InstanceDefinition[]} instances - the list of InstanceDefinitions to filter. Will be mutated.
 * @returns {InstanceDefinition[]} - InstanceDefinitions that should be in the 'models' folder for IG Publisher input
 */
export declare function filterModelInstances(instances: InstanceDefinition[]): InstanceDefinition[];
/**
 * The extension folder will include any instances of Extensions (StructureDefinitions with type set to 'Extension')
 *
 * @param {InstanceDefinition[]} instances - the list of InstanceDefinitions to filter. Will be mutated.
 * @returns {InstanceDefinition[]} - InstanceDefinitions that should be in the 'extensions' folder for IG Publisher input
 */
export declare function filterExtensionInstances(instances: InstanceDefinition[]): InstanceDefinition[];
/**
 * The profile folder will include any instances of Profiles (StructureDefinitions with type not set to 'Extension')
 *
 * @param {InstanceDefinition[]} instances - the list of InstanceDefinitions to filter. Will be mutated.
 * @returns {InstanceDefinition[]} - InstanceDefinitions that should be in the 'profiles' folder for IG Publisher input
 */
export declare function filterProfileInstances(instances: InstanceDefinition[]): InstanceDefinition[];
