"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.help = exports.setup = void 0;
var yargs_1 = __importDefault(require("yargs"));
var defaults = {
    style: 'line',
    synchronisedScroll: true,
    highlightCode: true,
    summary: 'closed',
    diffStyle: 'word',
    matching: 'none',
    matchWordsThreshold: 0.25,
    matchingMaxComparisons: 1000,
    format: 'html',
    input: 'command',
    output: 'preview',
    ignore: [],
    diffy: undefined,
    file: undefined,
    htmlWrapperTemplate: undefined,
    extraArguments: [],
};
var choices = {
    style: ['line', 'side'],
    summary: ['closed', 'open', 'hidden'],
    diffStyle: ['word', 'char'],
    matching: ['lines', 'words', 'none'],
    format: ['html', 'json'],
    input: ['file', 'command', 'stdin'],
    output: ['preview', 'stdout'],
    diffy: ['browser', 'pbcopy', 'print'],
};
function setup() {
    var currentYear = new Date().getFullYear();
    var argv = yargs_1.default
        .usage('Usage: diff2html [options] -- [diff args]')
        .option('style', {
        alias: 's',
        describe: 'Output style',
        nargs: 1,
        choices: choices.style,
        default: defaults.style,
    })
        .option('synchronisedScroll', {
        alias: 'sc',
        describe: 'Synchronised horizontal scroll',
        type: 'boolean',
        default: defaults.synchronisedScroll,
    })
        .option('highlightCode', {
        alias: 'hc',
        describe: 'Highlight Code',
        type: 'boolean',
        default: defaults.highlightCode,
    })
        .option('summary', {
        alias: 'su',
        describe: 'Show files summary',
        choices: choices.summary,
        default: defaults.summary,
    })
        .option('diffStyle', {
        alias: 'd',
        describe: 'Diff style',
        nargs: 1,
        choices: choices.diffStyle,
        default: defaults.diffStyle,
    })
        .option('matching', {
        alias: 'lm',
        describe: 'Diff line matching type',
        nargs: 1,
        choices: choices.matching,
        default: defaults.matching,
    })
        .option('matchWordsThreshold', {
        alias: 'lmt',
        describe: 'Diff line matching word threshold',
        nargs: 1,
        type: 'number',
        default: defaults.matchWordsThreshold,
    })
        .option('matchingMaxComparisons', {
        alias: 'lmm',
        describe: 'Diff line matching maximum line comparisons of a block of changes',
        nargs: 1,
        type: 'number',
        default: defaults.matchingMaxComparisons,
    })
        .option('format', {
        alias: 'f',
        describe: 'Output format',
        nargs: 1,
        choices: choices.format,
        default: defaults.format,
    })
        .option('input', {
        alias: 'i',
        describe: 'Diff input source',
        nargs: 1,
        choices: choices.input,
        default: defaults.input,
    })
        .option('output', {
        alias: 'o',
        describe: 'Output destination',
        nargs: 1,
        choices: choices.output,
        default: defaults.output,
    })
        .option('diffy', {
        alias: 'u',
        describe: 'Upload to diffy.org',
        nargs: 1,
        choices: choices.diffy,
        default: defaults.diffy,
    })
        .option('file', {
        alias: 'F',
        describe: 'Send output to file (overrides output option)',
        nargs: 1,
        type: 'string',
        default: defaults.file,
    })
        .option('htmlWrapperTemplate', {
        alias: 'hwt',
        describe: 'Use a custom template when generating markup',
        nargs: 1,
        type: 'string',
        default: defaults.htmlWrapperTemplate,
    })
        .option('ignore', {
        alias: 'ig',
        describe: 'ignore a file',
        type: 'array',
        default: defaults.ignore,
    })
        .example('diff2html -s line -f html -d word -i command -o preview -- -M HEAD~1', 'diff last commit, line by line, word comparison between lines,' +
        'previewed in the browser and input from git diff command')
        .example('diff2html -i file -- my-file-diff.diff', 'reading the input from a file')
        .example('diff2html -f json -o stdout -- -M HEAD~1', 'print json format to stdout')
        .example('diff2html -F my-pretty-diff.html -- -M HEAD~1', 'print to file')
        .example('diff2html --ig package-lock.json yarn.lock', 'ignore two particular files when generating the diff')
        .help()
        .alias('help', 'h')
        .alias('help', '?')
        .version()
        .alias('version', 'v')
        .epilog("\u00A9 2014-" + currentYear + " rtfpessoa\n      For more information, check out https://diff2html.xyz/\n      For support, check out https://github.com/rtfpessoa/diff2html-cli")
        .strict(true)
        .recommendCommands().argv;
    return __assign(__assign({}, argv), { ignore: argv.ignore || [], extraArguments: argv._ });
}
exports.setup = setup;
function help() {
    yargs_1.default.showHelp('log');
}
exports.help = help;
//# sourceMappingURL=yargs.js.map