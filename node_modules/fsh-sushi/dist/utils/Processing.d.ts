import { FHIRDefinitions } from '../fhirdefs';
import { FSHTank, RawFSH } from '../import';
import { Package } from '../export';
import { Configuration } from '../fshtypes';
export declare function isSupportedFHIRVersion(version: string): boolean;
export declare function ensureInputDir(input: string): string;
export declare function hasFshFiles(path: string): boolean;
export declare function findInputDir(input: string): string;
export declare function ensureOutputDir(input: string, output: string, isIgPubContext: boolean, isLegacyIgPubContext: boolean): string;
export declare function readConfig(input: string, isLegacyIgPubContext: boolean): Configuration;
export declare function loadExternalDependencies(defs: FHIRDefinitions, config: Configuration): Promise<FHIRDefinitions | void>[];
export declare function getRawFSHes(input: string): RawFSH[];
export declare function fillTank(rawFSHes: RawFSH[], config: Configuration): FSHTank;
export declare function writeFHIRResources(outDir: string, outPackage: Package, defs: FHIRDefinitions, snapshot: boolean, isIgPubContext: boolean): void;
/**
 * Initializes an empty sample FSH within a user specified subdirectory of the current working directory
 */
export declare function init(): Promise<void>;
